# This workflow will build a Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_and_test:
    runs-on: macos-latest

    name: Build and Test on macOS with Swift 6.0
    steps:
    - uses: actions/checkout@v4
    - name: Xcode setup
      uses: ./.github/actions/xcode-setup
    - name: Xcode version
      run: xcodebuild -version
      if: ${{ always() }}
    - name: Log Xcode versions
      run: ls -l /Applications/Xcode*
      if: ${{ failure() }}
    - name: Get swift version
      run: swift --version
    - name: Build
      run: swift build -v
    - name: Run tests
      run: swift test --enable-experimental-swift-testing

  build_linux:
    name: Build on Linux
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Get swift version
      run: swift --version
    - name: Delete Package.resolved
      run: rm -f Package.resolved
    - name: Build
      run: swift build -v

  build_apple_platforms:
    name: Build on Apple Platforms
    runs-on: macos-latest
    strategy:
        fail-fast: false
        matrix:
            platform: [iOS, watchOS, tvOS, visionOS]
    steps:
    - uses: actions/checkout@v4
    - name: Xcode setup
      uses: ./.github/actions/xcode-setup
    - name: Get swift version
      run: swift --version
    - name: Get Xcode version
      run: xcodebuild -version
    - name: Build ${{ matrix.platform }}
      run: xcodebuild build -destination generic/platform=${{ matrix.platform }} -scheme swift-json-schema-Package
